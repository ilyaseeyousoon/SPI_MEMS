--lpm_divide DEVICE_FAMILY="Cyclone IV E" LPM_DREPRESENTATION="UNSIGNED" LPM_NREPRESENTATION="UNSIGNED" LPM_PIPELINE=1 LPM_REMAINDERPOSITIVE="TRUE" LPM_WIDTHD=10 LPM_WIDTHN=40 MAXIMIZE_SPEED=6 OPTIMIZE_FOR_SPEED=5 aclr(gnd) clken clock denom numer quotient remain CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 IGNORE_CARRY_BUFFERS="OFF"
--VERSION_BEGIN 14.0 cbx_cycloneii 2014:06:17:18:06:03:SJ cbx_lpm_abs 2014:06:17:18:06:03:SJ cbx_lpm_add_sub 2014:06:17:18:06:03:SJ cbx_lpm_divide 2014:06:17:18:06:03:SJ cbx_mgl 2014:06:17:18:10:38:SJ cbx_stratix 2014:06:17:18:06:03:SJ cbx_stratixii 2014:06:17:18:06:03:SJ cbx_util_mgl 2014:06:17:18:06:03:SJ  VERSION_END


-- Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.


FUNCTION sign_div_unsign_vpi (clken, clock, denominator[9..0], numerator[39..0])
RETURNS ( quotient[39..0], remainder[9..0]);

--synthesis_resources = lut 420 reg 101 
SUBDESIGN lpm_divide_jvu
( 
	aclr	:	input;
	clken	:	input;
	clock	:	input;
	denom[9..0]	:	input;
	numer[39..0]	:	input;
	quotient[39..0]	:	output;
	remain[9..0]	:	output;
) 
VARIABLE 
	divider : sign_div_unsign_vpi;
	const_node_aclr	: NODE;
	numer_tmp[39..0]	: WIRE;

BEGIN 
	divider.clken = clken;
	divider.clock = clock;
	divider.denominator[] = denom[];
	divider.numerator[] = numer_tmp[];
	const_node_aclr = aclr;
	numer_tmp[] = numer[];
	quotient[] = divider.quotient[];
	remain[] = divider.remainder[];
END;
--VALID FILE
