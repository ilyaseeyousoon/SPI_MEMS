// Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "07/07/2017 16:27:21"
                                                                                
// Verilog Test Bench template for design : top_file
// 
// Simulation tool : ModelSim (Verilog)
// 

`timescale 1 ps/ 1 ps
module top_file_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg AD_sp_signal;
reg AD_trig_signal;
reg [15:0] ADC_data;
reg c5Mhz;
reg c20Mhz;
reg c200Mhz;
reg clk_10MHz_adc_i;
reg rdclk;
reg rdreq;
reg reset;
reg reset_after_end_frame;
reg signal_to_diods_request;
reg stm_signal;
// wires                                               
wire clk_10MHz_o;
wire [15:0]  data_finish;
wire signal_to_diods;

// assign statements (if any)                          
top_file i1 (
// port map - connection between master ports and signals/registers   
	.AD_sp_signal(AD_sp_signal),
	.AD_trig_signal(AD_trig_signal),
	.ADC_data(ADC_data),
	.c5Mhz(c5Mhz),
	.c20Mhz(c20Mhz),
	.c200Mhz(c200Mhz),
	.clk_10MHz_adc_i(clk_10MHz_adc_i),
	.clk_10MHz_o(clk_10MHz_o),
	.data_finish(data_finish),
	.rdclk(rdclk),
	.rdreq(rdreq),
	.reset(reset),
	.reset_after_end_frame(reset_after_end_frame),
	.signal_to_diods(signal_to_diods),
	.signal_to_diods_request(signal_to_diods_request),
	.stm_signal(stm_signal)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
                                                       
// --> end                                             
$display("Running testbench");                       
end                                                    
always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
                                                       
@eachvec;                                              
// --> end                                             
end                                                    
endmodule

